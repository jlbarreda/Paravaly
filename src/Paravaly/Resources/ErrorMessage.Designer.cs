//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Paravaly.Resources {
	using System;
	using System.Reflection;


	/// <summary>
	///    A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
	[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	public class ErrorMessage {

		private static global::System.Resources.ResourceManager resourceMan;

		private static global::System.Globalization.CultureInfo resourceCulture;

		internal ErrorMessage() {
		}

		/// <summary>
		///    Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
#if NETSTANDARD1_0
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Paravaly.Resources.ErrorMessage", typeof(ErrorMessage).GetTypeInfo().Assembly);
#else
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Paravaly.Resources.ErrorMessage", typeof(ErrorMessage).GetType().Assembly);
#endif
					resourceMan = temp;
				}
				return resourceMan;
			}
		}

		/// <summary>
		///    Overrides the current thread's CurrentUICulture property for all
		///    resource lookups using this strongly typed resource class.
		/// </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		public static global::System.Globalization.CultureInfo Culture {
			get {
				return resourceCulture;
			}
			set {
				resourceCulture = value;
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The array contains one or more invalid elements..
		/// </summary>
		public static string ForArrayWithInvalidElements {
			get {
				return ResourceManager.GetString("ForArrayWithInvalidElements", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The array can&apos;t contain null elements..
		/// </summary>
		public static string ForArrayWithNullElements {
			get {
				return ResourceManager.GetString("ForArrayWithNullElements", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The collection contains one or more invalid elements..
		/// </summary>
		public static string ForCollectionWithInvalidElements {
			get {
				return ResourceManager.GetString("ForCollectionWithInvalidElements", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The collection can&apos;t contain null elements..
		/// </summary>
		public static string ForCollectionWithNullElements {
			get {
				return ResourceManager.GetString("ForCollectionWithNullElements", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should not be empty..
		/// </summary>
		public static string ForEmpty {
			get {
				return ResourceManager.GetString("ForEmpty", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The array can&apos;t be empty..
		/// </summary>
		public static string ForEmptyArray {
			get {
				return ResourceManager.GetString("ForEmptyArray", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The collection can&apos;t be empty..
		/// </summary>
		public static string ForEmptyCollection {
			get {
				return ResourceManager.GetString("ForEmptyCollection", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value should end with the text &apos;{0}&apos;. Actual value: &apos;{1}&apos;..
		/// </summary>
		public static string ForEndsWith {
			get {
				return ResourceManager.GetString("ForEndsWith", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should be greater than {0}. Actual value: {1}..
		/// </summary>
		public static string ForGreaterThan {
			get {
				return ResourceManager.GetString("ForGreaterThan", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should be greater than or equal to {0}. Actual value: {1}..
		/// </summary>
		public static string ForGreaterThanOrEqualTo {
			get {
				return ResourceManager.GetString("ForGreaterThanOrEqualTo", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter length is not valid. Actual Length: {0}. Expected Length: {1}..
		/// </summary>
		public static string ForInvalidLength {
			get {
				return ResourceManager.GetString("ForInvalidLength", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter is not of type &apos;{0}&apos;. Actual type: {1}..
		/// </summary>
		public static string ForInvalidType {
			get {
				return ResourceManager.GetString("ForInvalidType", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value is not valid. Valid Values: {0}. Actual value: {1}..
		/// </summary>
		public static string ForInvalidValue {
			get {
				return ResourceManager.GetString("ForInvalidValue", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value doesn&apos;t match the regular expression. Regular Expression: {0}. Actual value: {1}..
		/// </summary>
		public static string ForIsNotRegexMatch {
			get {
				return ResourceManager.GetString("ForIsNotRegexMatch", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should be less than {0}. Actual value: {1}..
		/// </summary>
		public static string ForLessThan {
			get {
				return ResourceManager.GetString("ForLessThan", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should be less than or equal to {0}. Actual value: {1}..
		/// </summary>
		public static string ForLessThanOrEqualTo {
			get {
				return ResourceManager.GetString("ForLessThanOrEqualTo", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value should contain the text: &apos;{0}&apos;. Actual value: {1}..
		/// </summary>
		public static string ForMissingText {
			get {
				return ResourceManager.GetString("ForMissingText", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value is not a number..
		/// </summary>
		public static string ForNaN {
			get {
				return ResourceManager.GetString("ForNaN", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter type is not assignable to type &apos;{0}&apos;. Actual type: {1}..
		/// </summary>
		public static string ForNotAssignableType {
			get {
				return ResourceManager.GetString("ForNotAssignableType", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should be different from &apos;{0}&apos;. Actual type: {1}..
		/// </summary>
		public static string ForNotEqualString {
			get {
				return ResourceManager.GetString("ForNotEqualString", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter is outside the allowable range of values. Minimum: {0}. Maximum: {1}. Actual value: {2}..
		/// </summary>
		public static string ForOutOfRange {
			get {
				return ResourceManager.GetString("ForOutOfRange", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter count is outside the allowable range of values. Minimum: {0}. Maximum: {1}. Actual value: {2}..
		/// </summary>
		public static string ForOutOfRangeCount {
			get {
				return ResourceManager.GetString("ForOutOfRangeCount", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter length is outside the allowable range of values. Minimum: {0}. Maximum: {1}. Actual value: {2}..
		/// </summary>
		public static string ForOutOfRangeLength {
			get {
				return ResourceManager.GetString("ForOutOfRangeLength", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter value should start with the text &apos;{0}&apos;. Actual value: &apos;{1}&apos;..
		/// </summary>
		public static string ForStartsWith {
			get {
				return ResourceManager.GetString("ForStartsWith", resourceCulture);
			}
		}

		/// <summary>
		///    Looks up a localized string similar to The parameter should not contain white space only..
		/// </summary>
		public static string ForWhiteSpace {
			get {
				return ResourceManager.GetString("ForWhiteSpace", resourceCulture);
			}
		}
	}
}